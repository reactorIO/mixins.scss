// BASE FONT
@mixin base-font ($value: sharetech) {
  @if $value == sharetech {
    font-family: 'Share Tech', sans-serif;
    font-weight: 200;
  }

  @else if $value == different {
    // do something
  }
}

// SMOOTH TRANSITION
@mixin smooth-transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}
// @include smooth-transition(all, 0.2s, linear);


// FONT SMOOTHING
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}
// @include font-smoothing(off);
// @include font-smoothing(on);


// HIDE TEXT
@mixin hide-text {
    @include text-shadow(none);
    font: 0/0 a;
    color: transparent;
}

// STRIPES
@mixin stripes($colors, $direction: "to bottom") {
    $stripe-width: 100% / length($colors);
    $auto:         if( type-of(nth($colors, 1)) == list, false, true );
    $gradient:     ();

    @for $i from 1 through length($colors) {
        $item: nth($colors, $i);
        $dump: ();

        @if $auto == true {
            $dump: $item $stripe-width * ($i - 1), $item $stripe-width * $i;
        }

        @else {
            @if $i > 1 {
                $previous-item: nth($colors, $i - 1);
                $dump: append($dump, nth($item, 1) nth($previous-item, 2));
            }
            $dump: append($dump, $item);
        }

        $gradient: join($gradient, $dump, comma);
    }

    @include background-image(linear-gradient($direction, $gradient));
}

/* Colors only (auto-mode) */
$rainbow-auto: #fa9300, #66c9ee, #c9c9c9, #82b964, #d24d33, #fffbdb, #2e77bb, #6bd5b1, #f87aa0, #c9c9c9, #72664e, #ccd600, #fffbdb, #df620e, #993838, #ff9600, #d24d33, #8960a7, #82b964, #f87aa0, #d43f3f, #668000, #ff9600, #8960a7, #c9c9c9, #993838, #ccd600, #668000, #f4cc13, #72664e, #fa9300, #66c9ee, #c9c9c9, #82b964, #ccd600, #fffbdb, #2e77bb, #6bd5b1, #f87aa0, #c9c9c9, #fa9300, #66c9ee, #c9c9c9, #82b964, #ccd600, #fffbdb, #fa9300;

/* Color-stops (hard-mode) */
$rainbow-hard: #fa9300 2.61%, #66c9ee 4.35%, #c9c9c9 6.96%, #82b964 9.13%, #d24d33 11.3%, #fffbdb 13.91%, #2e77bb 16.52%, #6bd5b1 17.82%, #f87aa0 19.12%, #c9c9c9 21.29%, #72664e 23.9%, #ccd600 26.07%, #fffbdb 28.68%, #df620e 31.29%, #993838 33.03%, #ff9600 34.33%, #d24d33 36.94%, #8960a7 39.55%, #82b964 42.16%, #f87aa0 43.36%, #d43f3f 45.63%, #668000 47.8%, #ff9600 50.41%, #8960a7 51.71%, #c9c9c9 53.88%, #993838 55.18%, #ccd600 57.79%, #668000 59.53%, #f4cc13 60.83%, #72664e 63.44%, #fa9300 66.05%, #66c9ee 67.35%, #c9c9c9 69.96%, #82b964 71.7%, #ccd600 74.31%, #fffbdb 76.92%, #2e77bb 79.53%, #6bd5b1 80.4%, #f87aa0 81.7%, #c9c9c9 83.87%, #fa9300 86.04%, #66c9ee 87.78%, #c9c9c9 90.39%, #82b964 92.56%, #ccd600 95.17%, #fffbdb 97.34%, #fa9300 100%;

/* Using a pseudo-element to display it, no extra markup */
.element:after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
    height: .5em;
    // Auto
    @include stripes($treehouse-auto, to right);
    // Hard
    // @include stripes($treehouse-hard, to right);
}
//

// FULL BG COVER
@mixin bg-cover {
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

// PLACEHOLDER
@mixin placeholder ($padding) {
    &::-webkit-input-placeholder {
        padding-left:$padding;
    }
    &:-moz-placeholder {
        padding-left:$padding;
    }
    &::-moz-placeholder {
        padding-left:$padding;
    }

    &:-ms-input-placeholder {
        padding-left:$padding;
    }
}

// FLEXBOX
// .wrapper {
//   @include flexbox();

//     .item {
//       @include flex(1 200px);
//       @include order(2);
//     }
// }

@mixin flexbox {
  -ms-box-orient: horizontal;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -moz-flex;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// BOX SIZING
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

// OPACITY
// @include opacity(0.8);
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


// ABSOLUTE CENTERED
@mixin absolute-centered ($width: auto, $height: auto, $zindex: auto, $type: default) {
    position: absolute;
    top:50%;
    left:50%;
    width: $width;
    height: $height;
    margin-left: - ($width/2);
    margin-top: - ($height/2);
    z-index: $zindex;

    @if $type == alert {
        background: $modal-bg-alert;
        background: url("#{$assetPath}/icons/bg-alert.png") repeat;
    } @else if $type == notice {
        background: $modal-bg-notice;
        // background: url("#{$assetPath}/icons/bg-notice.png") repeat;
    } @else if $type == default {
        background: $modal-bg-default;
    }
}

// COLOR CIRCLE
// @include color-circle(200, $deg);
@mixin color-circle($radius, $deg) {
    $rad: angleToRadians($deg);
    @include radiansToCartesian($rad, $radius);

}

@function angleToRadians($a) {
    $pi: pi();
    $angle: ($a) / 180;
    $radians: $pi * $angle;
    @return $radians;
}

@mixin radiansToCartesian($r, $radius) {
    $x: round($radius * cos($r));
    $y: round($radius * sin($r));

    top: #{$y}px;
    left: #{$x}px;
}
//